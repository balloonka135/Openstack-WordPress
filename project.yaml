heat_template_version: 2018-03-02

description: This template deploys MariaDB and WordPress instances.

parameters:
  key_name:
    type: string
    label: Key name
    description: Name of a KeyPair to enable SSH access to the instance.
    default: project_keys

  image_id:
    type: string
    label: Image name
    description: Image ID to be used for the WordPress server.
    default: MU-Ubuntu-16.04-Xenial-64-bit
    constraints:
      - allowed_values:
        - MU-Ubuntu-16.04-Xenial-64-bit
        - MU-CentOS-7-64-bit
        - MU-Debian-8-Jessie-64-bit
        - MU-Debian-9-Stretch-64-bit
        - MU-Fedora-27-64-bit
        - MU-Ubuntu-14.04-Trusty-64-bit

  flavor:
    type: string
    label: Flavor
    description: Instance type to be used on the compute instance.
    default: m1.small
    constraints:
      - allowed values:
        - m1.small
        - m1.medium
        - m1.large

  database_name:
    type: string
    label: Database name
    description: Name of the WordPress application database.
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          database_name must begin with a letter and contain only alphanumeric
          characters.
    default: wordpress

  database_user:
    type: string
    label: Database username
    description: The WordPress database admin account username.
    hidden: true
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          database_user must begin with a letter and contain only alphanumeric
          characters.
    default: wordpressuser

  database_password:
    type: string
    description: The WordPress database admin account password.
    hidden: true
    constraints:
      - length: { min: 1, max: 30 }
      - allowed_pattern: '[a-zA-Z0-9]*'
      - description: Password must contain only alphanumeric characters
    default: wordpresspassword

  database_root_password:
    type: string
    description: Root password for MySQL.
    hidden: true
    constraints:
      - length: { min: 1, max: 30 }
      - allowed_pattern: '[a-zA-Z0-9]*'
      - description: Password should contain only alphanumeric characters
    default: wordpresspassword

  public_net_id:
    type: string
    label: ID of the external network
    description: Public network with floating IP addresses.
    default: public-float-21

  cidr:
    type: string
    label: Network CIDR
    description: The CIDR of the private network.
    default: '192.168.0.0/24'

resources:
  private_net_id:
    type: OS::Neutron::Net
    label: ID of the internal network
    default: private-1

  private_subnet_id:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net_id }
      cidr: { get_param: cidr }
      # dns_nameservers:
      #   - 8.8.8.8

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network }

  router-interface:
    type: OS::Neutron::Router
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_subnet_id }

  port_number:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net_id }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet_id }
      security_groups: { get_resource: security_group }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net_id }
      port_id: { get_resource: port_number }

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: web_server_security_group
      rules:
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  mysql:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: flavor }
      key: { get_param: key_name }
      networks:
        - port: { get_resource: port_number }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __mysql_root_password__: { get_param: database_root_password }
            __database_name__: { get_param: database_name }
            __database_user__: { get_param: database_user }
            __database_password__: { get_param: database_password }
          template: |
            #!/bin/bash
            # install MySQL
            apt-get update
            export DEBIAN_FRONTEND=noninteractive
            # apt-get install mariadb-server mariadb-client
            apt-get install -y mysql-server
 
            # configure MySQL root password
            mysqladmin -u root password "__mysql_root_password__"
 
            # listen on all network interfaces
            sed -i "s/bind-address.*/bind-address = 0.0.0.0/" /etc/mysql/my.cnf
 
            # restart service
            service mysql restart
 
            # create wordpress database
            mysql -u root --password="__mysql_root_password__" <<EOF
            CREATE DATABASE __database_name__;
            CREATE USER '__database_user__'@'localhost' IDENTIFIED BY '__database_password__';
            # SET PASSWORD FOR '__database_user__'@'localhost'=PASSWORD("__database_password__");
            GRANT ALL PRIVILEGES ON __database_name__.* TO '__database_user__'@'localhost' IDENTIFIED BY '__database_password__';
            FLUSH PRIVILEGES;
            EOF

  wordpress:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: port_number }
      security_groups: 
        - { get_resource: security_group }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __mysql_ip__: { get_attr: [mysql, first_address] }
            __database_name__: { get_param: database_name }
            __database_user__: { get_param: database_user }
            __database_password__: { get_param: database_password }
          template: |
            #!/bin/bash -ex
            # install dependencies
            apt-get update
            apt-get -y install apache2 php php-curl php-gd php-mbstring php-mcrypt php-xml php-xmlrpc
            # download wordpress
            wget http://wordpress.org/latest.tar.gz
            tar -xzf latest.tar.gz
            # configure wordpress
            cp wordpress/wp-config-sample.php wordpress/wp-config.php
            sed -i 's/database_name_here/__database_name__/' wordpress/wp-config.php
            sed -i 's/username_here/__database_user__/' wordpress/wp-config.php
            sed -i 's/password_here/__database_password__/' wordpress/wp-config.php
            sed -i 's/localhost/__mysql_ip__/' wordpress/wp-config.php
            # install a copy of the configured wordpress into apache's www directory
            rm /var/www/html/index.html
            cp -R wordpress/* /var/www/html/
            # give apache ownership of the application files
            chown -R www-data:www-data /var/www/html/
            chmod -R g+w /var/www/html/

outputs:
  WebsiteURL: 
    description: URL for WordPress blog.
    value:
      str_replace:
        template: http://host/wordpress
        params:
          host: { get_attr: [wordpress, first_address] }
    
  






