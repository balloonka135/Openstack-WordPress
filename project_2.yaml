heat_template_version: 2018-03-02

description: This template deploys MariaDB and WordPress instances.

parameters:

  key_name:
    type: string
    label: Key name
    description: Name of a KeyPair to enable SSH access to the instance.
    default: project_keys

  image_id:
    type: string
    label: Image name
    description: Image ID to be used for the WordPress server.
    default: MU-Ubuntu-16.04-Xenial-64-bit
    constraints:
      - allowed_values:
        - MU-Ubuntu-16.04-Xenial-64-bit
        - MU-CentOS-7-64-bit
        - MU-Debian-8-Jessie-64-bit
        - MU-Debian-9-Stretch-64-bit
        - MU-Fedora-27-64-bit
        - MU-Ubuntu-14.04-Trusty-64-bit

  # flavor:
  #   type: string
  #   label: Flavor
  #   description: Instance type to be used on the compute instance.
  #   default: m1.small
  #   constraints:
  #     - allowed values:
  #       - m1.small
  #       - m1.medium
  #       - m1.large

  flavor_wordpress:
    type: string
    default: 1 GB General Purpose v1
    label: Server Flavor
    description: Flavor of Cloud Server to use for WordPress
    constraints:
      - allowed_values:
        - 1 GB General Purpose v1
    immutable: true

  block_storage:
    type: number
    default: 1
    constraints:
      - range:
        min: 1
        max: 10
    label: Database Disk (in GB)
    description: Size of the Cloud Database volume in GB

  flavor_database:
    type: string
    default: 1GB Instance
    label: Cloud Database Flavor
    description: Flavor for the Cloud Database
    constraints:
      - allowed_values:
        - 1GB Instance
        - 2GB Instance
        - 4GB Instance

  public_net_id:
    type: string
    label: ID of the external network
    description: Public network with floating IP addresses.
    default: public-float-21

  cidr:
    type: string
    label: Network CIDR
    description: The CIDR of the private network.
    default: '192.168.0.0/24'

resources:

  private_net_id:
    type: OS::Neutron::Net
    label: ID of the internal network
    default: private-1

  private_subnet_id:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net_id }
      cidr: { get_param: cidr }
      # dns_nameservers:
      #   - 8.8.8.8

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network }

  router-interface:
    type: OS::Neutron::Router
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_subnet_id }

  port_number:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net_id }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet_id }
      security_groups: { get_resource: security_group }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net_id }
      port_id: { get_resource: port_number }

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: web_server_security_group
      rules:
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  mysql:
    type: mysql.yaml
    properties:
      image: { get_param: image_id }
      #flavor: { get_param: flavor }
      flavor: { get_param: flavor_database }
      storage: { get_param: block_storage }
      key: { get_param: key_name }
      private_network: { get_resource: private_net_id }
      # networks:
      #   - port: { get_resource: port_number }
      database_name: wordpress_db
      database_user: wordpress_user

  wordpress:
    type: wordpress.yaml
    properties:
      image: { get_param: image_id }
      # flavor: { get_param: flavor }
      flavor: { get_param: flavor_wordpress }
      key: { get_param: key_name }
      private_network: { get_resource: private_net_id }
      # networks:
      #   - port: { get_resource: port_number }
      # float_ip: { get_resource: floating_ip }
      mysql_server: { get_attr: [mysql, mysql_instance_ip] }
      database_name: wordpress_db
      database_user: wordpress_user
      database_password: { get_attr: [mysql, database_password] }
      security_groups: 
        - { get_resource: security_group }
        # - { get_attr: [cloud_init, rules] }

outputs:
  WebsiteURL: 
    description: URL for WordPress blog.
    value:
      str_replace:
        template: http://host/wordpress
        params:
          host: { get_attr: [wordpress, first_address] }
          # host: { get_attr: [wordpress, networks, private, 0] }

